# 워크플로우 이름
name: CI/CD to Docker Hub (User Service)

on:
    push:
        branches: ["main"] # main 브랜치에 push될 때 실행

        # 1. user-service 관련 파일들만 감지
        # (루트의 모든 파일을 감지하되, 'services/' 폴더는 제외)
        paths-ignore:
            - "services/**"
            # (만약 kanban-service 외에 다른 서비스 폴더가 있다면 추가)
            # - 'other-service-dir/**'

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            # 1. 소스코드 체크아웃
            - name: Checkout source code
              uses: actions/checkout@v4

            # 2. JDK 17 설정
            # (Dockerfile에서 빌드하지만, 빌드 전 테스트 등을 위해 설정)
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            # 3. Docker 빌드 환경 설정
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # 4. Docker Hub 로그인 (이미 설정한 Secrets 사용)
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            # 5. Docker 이미지 빌드 및 Docker Hub로 푸시
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  # context: . (Dockerfile이 루트에 있으므로)
                  context: .
                  # file: ./Dockerfile (루트에 있는 Dockerfile 사용)
                  file: ./Dockerfile
                  push: true
                  # Docker Hub에 올릴 이미지 이름 (원하는대로 수정 가능)
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/wealist-user-service-wonny:latest
