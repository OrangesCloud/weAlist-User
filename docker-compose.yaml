
services:
  app:
    build: .
    container_name: weAlist-user
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - APP_NAME=${APP_NAME}
      - JPA_DDL_AUTO=${JPA_DDL_AUTO}
      - JPA_SHOW_SQL=${JPA_SHOW_SQL}
      - JPA_FORMAT_SQL=${JPA_FORMAT_SQL}
      - JPA_DIALECT=${JPA_DIALECT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_MS=${JWT_EXPIRATION_MS}
      - JWT_ACCESS_MS=${JWT_ACCESS_MS}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - postgres
      - redis

    networks:
      - wealist-network
    restart: unless-stopped



  postgres:
    image: postgres:16-alpine
    container_name: wealist-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}"
    networks:
      - wealist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wealist_user -d wealist_db"]
      interval: 20s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: wealist-redis
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}"
    networks:
      - wealist-network
    restart: unless-stopped

networks:
  wealist-network:
    driver: bridge
    name: wealist-network

volumes:
  postgres_data:
    name: wealist_postgres_data
  redis_data:
    name: wealist_redis_data
